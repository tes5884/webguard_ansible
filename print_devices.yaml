- name: Parse nextdns.conf for MAC address profile mappings
  hosts: "{{ target_hosts }}"
  become: yes
  tasks:
    - name: Read nextdns.conf file
      ansible.builtin.slurp:
        src: /usr/local/etc/nextdns.conf
      register: nextdns_conf_raw

    - name: Decode and split nextdns.conf contents
      set_fact:
        nextdns_conf_content: "{{ nextdns_conf_raw.content | b64decode | split('\n') }}"

    - name: Filter all profile lines
      set_fact:
        profile_lines: "{{ nextdns_conf_content | select('search', '^profile\\s+') | list }}"

    - name: Filter all device comment lines
      set_fact:
        device_comment_lines: "{{ nextdns_conf_content | select('search', '^//device\\s+') | list }}"

    - name: Extract device comments into a dictionary
      set_fact:
        device_names: "{{ device_comment_lines 
                         | map('regex_replace', '^//device\\s+([0-9A-Fa-f:]+)\\s+(.*)', '{\"mac\": \"\\1\", \"device_name\": \"\\2\"}')
                         | map('from_json')
                         | list | items2dict(key_name='mac', value_name='device_name') }}"

    - name: Extract MAC addresses and profiles
      set_fact:
        mac_profiles: "{{ profile_lines 
                         | map('regex_replace', '^profile\\s+([0-9A-Fa-f:]+)=(\\w+)', '{\"mac\": \"\\1\", \"profile\": \"\\2\"}')
                         | map('from_json')
                         | list }}"

    - name: Merge device names with profiles
      set_fact:
        mac_profiles_with_names: "{{ mac_profiles | map('combine', {'device_name': device_names[item.mac] | default('')}) | list }}"

    - name: Display all profiles with device names
      ansible.builtin.debug:
        msg: |
          All profile mappings:
          {% for item in mac_profiles_with_names %}
          'mac': '{{ item.mac }}', 'profile': '{{ item.profile }}'{% if item.device_name %}, 'device_name': '{{ item.device_name }}'{% endif %}
          {% endfor %}
