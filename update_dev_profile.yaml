- name: Update nextdns.conf with MAC address profile
  hosts: "{{ target_hosts }}"
  become: yes
  gather_facts: no
  vars:
    mac_address: "{{ mac_address }}"  # Replace with the desired MAC address or pass as an extra var
    profile_id: "{{ profile_id }}"     # The profile to assign to the MAC address
    device_name: "{{ device_name }}"   # Familiar name to identify the device

  tasks:
    - name: Convert MAC address hyphens to colons using Jinja2
      set_fact:
        converted_mac_address: "{{ mac_address | regex_replace('-', ':') }}"

    - name: debug converted mac address
      debug:
        msg: the current value for converted is "{{ converted_mac_address }}"
        
    - name: Validate the final MAC address format
      fail:
        msg: "MAC address is not valid. Expected format is aa:bb:cc:dd:ee:ff."
      when: not converted_mac_address is match('^[0-9A-Fa-f]{2}(:[0-9A-Fa-f]{2}){5}$')
        
    - name: Validate profile_id format
      ansible.builtin.assert:
        that:
          - profile_id is defined
          - profile_id is match('^[A-Za-z0-9]+$')
        fail_msg: "profile_id '{{ profile_id }}' is invalid. It must contain only letters and numbers, with no spaces or special characters."
        success_msg: "profile_id '{{ profile_id }}' is valid."

    - name: Validate device_name format
      ansible.builtin.assert:
        that:
          - device_name is defined
          - device_name is match('^[A-Za-z0-9 ]+$')
        fail_msg: "device_name '{{ device_name }}' is invalid. It must contain only letters, numbers, and spaces, with no special characters."
        success_msg: "device_name '{{ device_name }}' is valid."

    - name: Check if MAC address profile exists in nextdns.conf
      ansible.builtin.command: "grep '^profile {{ mac_address }}={{ profile_id }}' /usr/local/etc/nextdns.conf"
      register: profile_check
      failed_when: profile_check.rc > 1  # Only fail if rc > 1 (indicates an actual error)
      changed_when: no  # Prevents this check from marking the task as changed

    - name: Set fact if profile already exists
      ansible.builtin.set_fact:
        profile_status: "Profile for MAC address {{ mac_address }} already exists with profile ID {{ profile_id }}."
      when: profile_check.rc == 0
      
    - name: Add device name comment above the profile assignment
      ansible.builtin.lineinfile:
        path: /usr/local/etc/nextdns.conf
        regexp: '^//device {{ mac_address }}'
        line: "//device {{ mac_address }} {{ device_name }}"
        state: present
        insertafter: "^profile {{ mac_address }}="
        
    - name: Update or add the MAC address profile in nextdns.conf
      ansible.builtin.lineinfile:
        path: /usr/local/etc/nextdns.conf
        regexp: '^profile {{ mac_address }}='
        line: "profile {{ mac_address }}={{ profile_id }}"
        state: present
        create: yes
      register: profile_update
      when: profile_check.rc != 0

    - name: Set fact if profile was added or updated
      ansible.builtin.set_fact:
        profile_status: >-
          Profile for MAC address {{ mac_address }} was {{ 'added' if profile_update.changed else 'updated' }} 
          with profile ID {{ profile_id }} and device name {{ device_name }}.
      when: profile_check.rc != 0

    - name: Restart NextDNS to apply changes if profile was added or updated
      ansible.builtin.service:
        name: nextdns
        state: restarted
      when: profile_update.changed

    - name: Summary of actions
      ansible.builtin.debug:
        msg: "{{ profile_status }}"
